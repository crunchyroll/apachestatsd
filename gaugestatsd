#!/usr/bin/python

# cpennello 2015-09-11

import os.path
import socket
import sys

defaultaddr = '127.0.0.1:8125'

def parse_addr(addr):
  addr = addr.split(':')
  if len(addr) != 2: raise ValueError('invalid addr')
  return addr[0], int(addr[1])

def usage():
  sys.stderr.write('usage: %s [-h] prefix [statsd_addr]\n' %
    os.path.basename(sys.argv[0]))
  sys.stderr.write('  reads keys and integer gauge values from standard in,\n')
  sys.stderr.write('  writes them to statsd.\n')
  sys.stderr.write('  statsd_addr defaults to "%s"\n' % defaultaddr)
  sys.exit(2)

def main():
  if len(sys.argv) == 1:
    usage()
  elif len(sys.argv) == 2:
    prefix = sys.argv[1]
    addr = defaultaddr
  elif len(sys.argv) == 3:
    prefix = sys.argv[1]
    addr = sys.argv[2]
  else:
    usage()
  if prefix == '-h': usage()

  addr = parse_addr(addr)

  # Set up StatsD socket.
  sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
  sock.connect(addr)

  def gauge(prefix, stat, val):
    sock.send('%s.%s:%s|g' % (prefix, stat, val))

  for line in sys.stdin:
    line = line.strip().split()
    if len(line) != 2:
      raise Exception('expected key value pairs')
    stat, val = line[0], int(line[1])
    gauge(prefix, stat, val)

main()
